<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://aitools.org/programd/4.5/test-cases"
    targetNamespace="http://aitools.org/programd/4.5/test-cases" elementFormDefault="qualified"
    attributeFormDefault="unqualified" version="1.0" xml:lang="EN">
    <xs:element name="TestSuite">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="TestCase" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>A TestCase has one or more inputs that it sends to the engine,
                            and one or more Checkers that are used to validate the response to that
                            input.  In the simplest form, you can specify a single Input, and a single
                            Checker.  If you want to specify multiple Inputs, you put them inside
                            an Inputs element, and use And and/or Or elements to indicate how they
                            should be evaluated.  If you want to specify multiple Checkers, you put
                            them inside a Checkers element, and use And and/or Or.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:choice>
                                <xs:element name="Input" type="Input"/>
                                <xs:element name="Inputs" type="InputList"/>
                            </xs:choice>
                            <xs:choice>
                                <xs:group ref="Checkers"/>
                                <xs:element name="Checkers" type="CheckerList"/>
                            </xs:choice>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="name" type="xs:Name" use="required">
                <xs:annotation>
                    <xs:documentation>The name of the test suite is a convenient way to refer to
                    it.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="clearInput" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>The clearInput is sent to the engine at the beginning of a
                        test case run.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="InputList">
        <xs:choice>
            <xs:element name="Input" type="Input"/>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="And" type="InputList"/>
                <xs:element name="Or" type="InputList"/>
            </xs:choice>
        </xs:choice>
    </xs:complexType>
    <xs:simpleType name="Input">
        <xs:annotation>
            <xs:documentation>An Input is a string that will be sent to the
                engine when this test case is run.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:complexType name="CheckerList">
        <xs:choice maxOccurs="unbounded">
            <xs:group ref="Checkers" maxOccurs="unbounded"/>
            <xs:element name="And" type="CheckerList"/>
            <xs:element name="Or" type="CheckerList"/>
        </xs:choice>
    </xs:complexType>
    <xs:group name="Checkers">
        <xs:choice>
            <xs:element name="AlertKeywords" type="KeywordChecker">
                <xs:annotation>
                    <xs:documentation>An AlertKeywords checker alerts us if a
                        response does *not* contain any of the comma-separated
                        keywords.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ExpectedAnswer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>An ExpectedAnswer checker tells us if a
                        response matches an expected answer.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ExpectedKeywords" type="KeywordChecker">
                <xs:annotation>
                    <xs:documentation>An ExpectedKeywords checker tells us if a
                        response *does* contain one or more of the comma-separated
                        keywords.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Length" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>A Length checker tells us if a response is
                        exactly the specified length.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:group>
    <xs:complexType name="KeywordChecker">
        <xs:choice>
            <xs:element name="Keyword" type="xs:string"/>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="And" type="KeywordList"/>
                <xs:element name="Or" type="KeywordList"/>
            </xs:choice>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="KeywordList">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="Keyword" type="xs:string" maxOccurs="unbounded"/>
            <xs:element name="And" type="KeywordList"/>
            <xs:element name="Or" type="KeywordList"/>
        </xs:choice>
    </xs:complexType>
</xs:schema>
